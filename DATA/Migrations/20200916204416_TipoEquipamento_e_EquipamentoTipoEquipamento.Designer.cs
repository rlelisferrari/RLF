// <auto-generated />
using System;
using DATA.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DATA.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200916204416_TipoEquipamento_e_EquipamentoTipoEquipamento")]
    partial class TipoEquipamento_e_EquipamentoTipoEquipamento
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DOMAIN.Models.Equipamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Equipamentos");
                });

            modelBuilder.Entity("DOMAIN.Models.EquipamentoTipoEquipamento", b =>
                {
                    b.Property<int>("EquipamentoId")
                        .HasColumnType("int");

                    b.Property<int>("TipoEquipamentoId")
                        .HasColumnType("int");

                    b.HasKey("EquipamentoId", "TipoEquipamentoId");

                    b.HasIndex("TipoEquipamentoId");

                    b.ToTable("EquipamentoTipoEquipamento");
                });

            modelBuilder.Entity("DOMAIN.Models.Ordem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TipoOrdemId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoOrdemId");

                    b.ToTable("Ordens");
                });

            modelBuilder.Entity("DOMAIN.Models.TipoEquipamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoEquipamento");
                });

            modelBuilder.Entity("DOMAIN.Models.TipoOrdem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoOrdens");
                });

            modelBuilder.Entity("DOMAIN.Models.EquipamentoTipoEquipamento", b =>
                {
                    b.HasOne("DOMAIN.Models.Equipamento", "Equipamento")
                        .WithMany("EquipamentoTipoEquipamento")
                        .HasForeignKey("EquipamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DOMAIN.Models.TipoEquipamento", "TipoEquipamento")
                        .WithMany("EquipamentoTipoEquipamento")
                        .HasForeignKey("TipoEquipamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DOMAIN.Models.Ordem", b =>
                {
                    b.HasOne("DOMAIN.Models.TipoOrdem", "TipoOrdem")
                        .WithMany()
                        .HasForeignKey("TipoOrdemId");
                });
#pragma warning restore 612, 618
        }
    }
}
